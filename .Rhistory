view()
starwars %>%
dplyr::select(hair_color) %>%
dplyr::count(hair_color) %>%
dplyr::arrange(desc(n)) %>%
view() %>%
barplot()
starwars %>%
dplyr::select(hair_color) %>%
dplyr::count(hair_color) %>%
dplyr::arrange(desc(n)) %>%
view() %>%
barplot()
starwars %>%
dplyr::select(hair_color) %>%
dplyr::count(hair_color) %>%
dplyr::arrange(desc(n)) %>%
view() %>%
barplot(n)
length(hair_color)
view(starwars[is.na(hair_color),])
is.na(hair_color)
class(height)
length(height)
summary(height)
boxplot(height)
hist(height)
#VARIABLES TYPES
glimpse(starwars)
class(starwars$gender)
unique(starwars$gender)
#VARIABLES TYPES
view(starwars)
starwars$gender <- as.factor(starwars$gender)
class(starwars$gender)
levels(starwars$gender)
attach(starwars)
gender <- factor(gender,
levels = c("masculine", "feminine"))
levels(gender)
glimpse(starwars)
#SELECT VARIABLES
starwars %>%
dplyr::select(name, height, ends_with("color")) %>%
names()
#FILTER OBSERVATIONS
unique(hair_color)
starwars %>%
dplyr::select(name, height, ends_with("color")) %>%
dplyr::mutate(height = height /100) %>%
dplyr::filter(hair_color %in% c("blond", "brown") & height < 1.80 ) %>%
view()
#MISSING DATA
mean(height, na.rm = TRUE)
#MISSING DATA
round(mean(height, na.rm = TRUE),2)
starwars %>%
dplyr::select(name, gender, hair_color, height)
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
na.omit()
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
dplyr::filter(complete.cases(.))
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
dplyr::filter(complete.cases(.))
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
dplyr::filter(!complete.cases(.)) %>%
view()
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
dplyr::filter(!complete.cases(.))
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
dplyr::filter(!complete.cases(.)) %>%
drop_na(height)
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
dplyr::filter(!complete.cases(.)) %>%
dplyr::mutate(hair_color =  replace_na(hair_color, "Metal"))
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
dplyr::filter(!complete.cases(.)) %>%
dplyr::mutate(hair_color =  replace_na(hair_color, "Metal"), height = replace_na(height, 0))
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
dplyr::filter(!complete.cases(.)) %>%
dplyr::mutate(hair_color =  replace_na(hair_color, "Metal"), height = replace_na(height, 0), gender = replace_na(gender = "todes..."))
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
dplyr::filter(!complete.cases(.)) %>%
dplyr::mutate(hair_color =  replace_na(hair_color, "Metal"), height = replace_na(height, 0), gender = replace_na(gender = "Todes"))
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
dplyr::filter(!complete.cases(.)) %>%
dplyr::mutate(hair_color =  replace_na(hair_color, "Metal"),
height = replace_na(height, 0),
gender = replace_na(gender, "Todes..."))
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
dplyr::filter(!complete.cases(.)) %>%
dplyr::mutate(hair_color =  replace_na(hair_color, "Metal"),
height = replace_na(height, 0),
gender = replace_na(gender, "Todes"))
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
dplyr::filter(!complete.cases(.)) %>%
dplyr::mutate(hair_color =  replace_na(hair_color, "Metal"),
height = replace_na(height, 0)) %>%
drop_na(gender)
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
dplyr::filter(!complete.cases(.)) %>%
dplyr::mutate(hair_color =  replace_na(hair_color, "Metal"),
height = replace_na(height, 0)) %>%
dplyr::mutate(gender = recode(gender,
NA = "Todes..."))
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
dplyr::filter(!complete.cases(.)) %>%
dplyr::mutate(hair_color =  replace_na(hair_color, "Metal"),
height = replace_na(height, 0)) %>%
dplyr::mutate(genero = recode(genero,
masculine = "H",
feminine  = "M",
NA = "TODES"))
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
dplyr::filter(!complete.cases(.)) %>%
dplyr::mutate(hair_color =  replace_na(hair_color, "Metal"),
height = replace_na(height, 0)) %>%
dplyr::mutate(genero = recode(genero,
masculine = "H",
feminine  = "M"))
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
dplyr::filter(!complete.cases(.)) %>%
dplyr::mutate(hair_color =  replace_na(hair_color, "Metal"),
height = replace_na(height, 0)) %>%
dplyr::mutate(gender = recode(gender,
masculine = "H",
feminine  = "M"))
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
dplyr::filter(!complete.cases(.)) %>%
dplyr::mutate(hair_color =  replace_na(hair_color, "Metal"),
height = replace_na(height, 0)) %>%
dplyr::mutate(gender = recode(gender,
masculine = "H",
feminine  = "M",
NA = "TODES"))
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
dplyr::filter(!complete.cases(.)) %>%
dplyr::mutate(hair_color =  replace_na(hair_color, "Metal"),
height = replace_na(height, 0)) %>%
dplyr::mutate(gender = recode(gender,
masculine = "H",
feminine  = "M",
"NA" = "TODES"))
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
dplyr::filter(!complete.cases(.)) %>%
dplyr::mutate(hair_color =  replace_na(hair_color, "Metal"),
height = replace_na(height, 0)) %>%
dplyr::mutate(gender = recode(gender,
masculine = "H",
feminine  = "M",),
gender  =replace_na(gender "todes"))
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
dplyr::filter(!complete.cases(.)) %>%
dplyr::mutate(hair_color =  replace_na(hair_color, "Metal"),
height = replace_na(height, 0)) %>%
dplyr::mutate(gender = recode(gender,
masculine = "H",
feminine  = "M",),
gender = replace_na(as.character(gender), "TODES"))
starwars %>%
dplyr::select(name, gender, hair_color, height) %>%
dplyr::filter(!complete.cases(.)) %>%
dplyr::mutate(hair_color =  replace_na(hair_color, "Metal"),
height = replace_na(height, 0)) %>%
dplyr::mutate(gender = recode(gender,
masculine = "H",
feminine  = "M",),
gender = replace_na(as.character(gender), "TODES"),
gender = as.factor(gender))
#DUPLICATE
name <- c("peter", "jhon", "andrew", "peter")
edad <- c(22,33,44,22)
friends <- data.frame(name, edad)
duplicated(friends)
friends[!duplicated(friends),]
friends %>%
distinct()
#RECORDING VARIABLES
starwars %>%
dplyr::select(name, gender)
starwars %>%
dplyr::select(name, gender) %>%
dplyr::mutate(gender = recode(gender,
"masculine" = 1,
"feminine" = 0))
starwars %>%
dplyr::select(name, gender) %>%
dplyr::mutate(nro_gender = recode(gender,
"masculine" = 1,
"feminine" = 0))
starwars %>%
dplyr::select(name, gender) %>%
dplyr::mutate(nro_gender = recode(gender,
"masculine" = 1,
"feminine" = 0)) %>%
dplyr::mutate(nro_gender = as.factor(nro_gender))
starwars %>%
dplyr::select(name, gender) %>%
dplyr::mutate(nro_gender = recode(gender,
"masculine" = 1,
"feminine" = 0)) %>%
dplyr::mutate(nro_gender = as.factor(nro_gender)) %>%
plot(nro_gender)
starwars %>%
dplyr::select(name, gender) %>%
dplyr::mutate(nro_gender = recode(gender,
"masculine" = 1,
"feminine" = 0)) %>%
dplyr::mutate(nro_gender = as.factor(nro_gender)) %>%
hist(nro_gender)
starwars %>%
dplyr::select(name, gender) %>%
dplyr::mutate(nro_gender = recode(gender,
"masculine" = 1,
"feminine" = 0)) %>%
#dplyr::mutate(nro_gender = as.factor(nro_gender)) %>%
hist(nro_gender)
starwars %>%
dplyr::select(name, gender) %>%
dplyr::mutate(nro_gender = recode(gender,
"masculine" = 1,
"feminine" = 0))
starwars %>%
dplyr::select(name, gender) %>%
dplyr::mutate(nro_gender = recode(gender,
"masculine" = 1,
"feminine" = 0)) %>%
dplyr::mutate(nro_gender = as.numeric(nro_gender)) %>%
hist(nro_gender)
?hist
hist(starwars$mass, breaks = "Sturges",
freq = NULL, probability = !freq,
include.lowest = TRUE, right = TRUE, fuzz = 1e-7,
density = NULL, angle = 45, col = "lightgray", border = NULL,
main = paste("Histogram of" , xname),
xlim = range(breaks), ylim = NULL,
xlab = xname, ylab,
axes = TRUE, plot = TRUE, labels = FALSE,
nclass = NULL, warn.unused = TRUE, ...)
hist(starwars$mass, breaks = "Sturges",
freq = NULL, probability = !freq,
include.lowest = TRUE, right = TRUE, fuzz = 1e-7,
density = NULL, angle = 45, col = "lightgray", border = NULL,
main = paste("Histogram of" , xname),
xlim = range(breaks), ylim = NULL,
xlab = xname, ylab,
axes = TRUE, plot = TRUE, labels = FALSE,
nclass = NULL, warn.unused = TRUE)
starwars %>%
dplyr::select(name, gender) %>%
dplyr::mutate(nro_gender = recode(gender,
"masculine" = 1,
"feminine" = 0)) %>%
dplyr::mutate(nro_gender = as.numeric(nro_gender)) %>%
hist(starwars$mass )
class(mass)
starwars %>%
dplyr::select(name, gender) %>%
dplyr::mutate(nro_gender = recode(gender,
"masculine" = 1,
"feminine" = 0)) %>%
dplyr::mutate(nro_gender = as.numeric(nro_gender)) %>%
hist.default(., starwars$mass)
starwars %>%
dplyr::select(name, gender) %>%
dplyr::mutate(nro_gender = recode(gender,
"masculine" = 1,
"feminine" = 0)) %>%
dplyr::mutate(nro_gender = as.numeric(nro_gender)) %>%
hist.default(starwars, starwars$mass)
hist(starwars, starwars$mass)
class(mass)
starwars %>%
dplyr::select(name, gender) %>%
dplyr::mutate(nro_gender = recode(gender,
"masculine" = 1,
"feminine" = 0)) %>%
dplyr::mutate(nro_gender = as.numeric(nro_gender))
?msleep
view(msleep)
glimpse(msleep)
attach(msleep)
#rename variable
msleep %>%
dplyr::rename(consevacion = conservation)
#reorden variables
msleep %>%
dplyr::select(name, gender, vore, with(sleep), everything())
#reorden variables
msleep %>%
dplyr::select(name, gender, vore, everything())
msleep
#reorden variables
msleep %>%
dplyr::select(name, genus, vore, everything())
#reorden variables
msleep %>%
dplyr::select(genus, name, vore, everything())
#change a variable type
class(vore)
unique(vore)
vore <- as.factor(vore)
glimpse(msleep)
msleep$vore <- as.factor(msleep$vore)
glimpse(msleep)
msleep %>%
dplyr::mutate(vore 0 as.character(vore)) %>%
glimpse()
msleep %>%
dplyr::mutate(vore = as.character(vore)) %>%
glimpse()
msleep$vore <- as.factor(msleep$vore)
glimpse(msleep)
msleep %>%
dplyr::mutate(vore = as.character(vore)) %>%
glimpse()
names(msleep)
msleep %>%
dplyr::select(genus, name, vore,starts_with(sleep), ends_with(wt) everything())
msleep %>%
dplyr::select(genus, name, vore,starts_with(sleep), ends_with(wt), everything())
msleep %>%
dplyr::select(genus, starts_with(sleep), ends_with(wt), everything())
dplyr::select(genus, starts_with(sleep), everything())
msleep %>%
select(2:4,
awake,
stars_with("sleep"),
contains("wt")) %>%
names()
msleep %>%
select(2:4,
awake,
starts_with("sleep"),
contains("wt")) %>%
names()
#filter and arrange data
unique(order)
msleep %>%
dplyr::filter(order %in% c("Carnivora", "Rodentia") & sleep_total <8) %>%
dplyr::select(name, order, sleep_total) %>%
dplyr::arrange(sleep_total) %>%
view()
msleep %>%
dplyr::filter(order %in% c("Carnivora", "Rodentia") & sleep_total <8) %>%
dplyr::select(name, order, sleep_total) %>%
dplyr::arrange(-sleep_total) %>%
view()
msleep %>%
dplyr::filter(order %in% c("Carnivora", "Rodentia") & sleep_total <8) %>%
dplyr::select(name, order, sleep_total) %>%
dplyr::arrange(order) %>%
view()
msleep %>%
dplyr::mutate(brainwt = brainwt * 1000) %>%
view()
msleep %>%
dplyr::select(name, order, brainwt) %>%
dplyr::mutate(brainwt = brainwt * 1000) %>%
view()
msleep %>%
dplyr::select(name, order, brainwt) %>%
dplyr::mutate(brainwt_1000 = brainwt * 1000) %>%
view()
brainwt
brainwt > 0.01
size_brain <- msleep %>%
dplyr::select(name, brainwt) %>%
drop_na(brainwt) %>%
dplyr::mutate(brain_size = if_else(brainwt > 0.01),
"large",
"small") %>%
view()
size_brain <- msleep %>%
dplyr::select(name, brainwt) %>%
drop_na(brainwt) %>%
dplyr::mutate(brain_size = if_else(brainwt > 0.01,
"large",
"small")) %>%
view()
size_brain <- msleep %>%
dplyr::select(name, brainwt) %>%
drop_na(brainwt) %>%
dplyr::mutate(brain_size = if_else(brainwt > 0.01,
"large",
"small")) %>%
dplyr::mutate(brain_size_num = recode(brain_size,
"large" = 1,
"small" = 0)) %>%
view()
#reshape the data from wide to logng or long to wide
library(gapminder)
#reshape the data from wide to logng or long to wide
install.packages(gapminder)
install.packages("gapminder")
#reshape the data from wide to logng or long to wide
library(gapminder)
view(gapminder)
data <- dplyr::select(gapminder, country, year, lifeExp)
view(data)
width_data <- data %>%
pivot_wider(names_from = year, values_from = lifeExp) %>%
view()
long_data <- width_data %>%
pivot_longer(2:13,
names_to = "year",
values_to = "lifeExp") %>%
view()
################################################
###     10 summarise your data using R       ###
################################################
glimpse(msleep)
#describe the spread, centrality and variance or your data
min(awake)
max(awake)
range(awake)
IQR(awake)
mean(awake)
median(awake)
var(awake)
?IQR
#summarise selected variables
summarise(sleep_total)
#summarise selected variables
summarise(msleep$sleep_total)
class(sleep_total)
#summary selected variables
summary(sleep_total)
#summary selected variables
summary(msleep)
source("C:/Users/Administrador/Desktop/estadistica_pc/import_data/basics.R", echo=TRUE)
source("C:/Users/Administrador/Desktop/estadistica_pc/import_data/basics.R", echo=TRUE)
msleep %>%
msleep %>%
dplyr::select(sleep_total, brainwt) %>%
summary()
msleep %>%
dplyr::select(sleep_total, brainwt) %>%
dplyr::summarise()
msleep %>%
dplyr::select(sleep_total, brainwt) %>%
dplyr::summarise(brainwt)
msleep %>%
dplyr::select(sleep_total, brainwt) %>%
summary
msleep %>%
drop_na(vore) %>%
dplyr::group_by(vore) %>%
dplyr::summarise(minimo = min(sleep_total),
media = mean(sleep_total),
maximo = max(sleep_total),
rango = max(sleep_total) - min(sleep_total)) %>%
dplyr::arrange(minimo) %>%
view()
msleep %>%
drop_na(vore) %>%
dplyr::group_by(vore) %>%
dplyr::summarise(minimo = min(sleep_total),
media = mean(sleep_total),
maximo = max(sleep_total),
rango = max(sleep_total) - min(sleep_total),
desvStd = var(sleep_total)) %>%
dplyr::arrange(minimo) %>%
view()
install.packages("MASS")
#creating contingency table
library(MASS)
attach(cars93)
attach(Cars93)
glimpse(Cars93)
autos <- Cars93
table(Origin)
table(AirBags, Origin)
addmargins(table(AirBags, Origin), 1)
addmargins(table(AirBags, Origin))
addmargins(table(AirBags, Origin),1)
prop.table(table(AirBags, Origin))*100
round( prop.table(table(AirBags, Origin)),2)
round( prop.table(table(AirBags, Origin)*100),2)
prop.table(table(AirBags, Origin),1)*100
prop.table(table(AirBags, Origin),2)*100
round(prop.table(table(AirBags, Origin),2)*100, 2)
round(prop.table(table(AirBags, Origin),2)*100, 2+"%")
round(prop.table(table(AirBags, Origin),2)*100, 2, "%")
round(prop.table(table(AirBags, Origin),2)*100, 2)
autos %>%
dplyr::group_by(Origin, AirBags) %>%
dplyr::summarise(number = n()) %>%
pivot_wider(names_from = Origin,
values_from = number) %>%
view
